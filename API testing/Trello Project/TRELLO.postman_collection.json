{
	"info": {
		"_postman_id": "76f49e7f-455d-4b47-8e2b-9c16bc6f7ca5",
		"name": "TRELLO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25358645"
	},
	"item": [
		{
			"name": "Create a new board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;",
							"",
							"pm.test(\"Should verify status code\", () => {",
							"    pm.response.to.have.status(200);",
							"    resBody = pm.response.json();",
							"})",
							"",
							"pm.test(\"Should verify created board name\", () => {",
							"    pm.expect(resBody.name).to.eql(pm.collectionVariables.get(\"boardName\"));",
							"})",
							"",
							"pm.test(\"Should verify response ID\", () => {",
							"    pm.expect(resBody.id.length).to.greaterThan(10);",
							"    pm.collectionVariables.set(\"boardId\", resBody.id);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/?name={{boardName}}&key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Show list of boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;",
							"",
							"pm.test(\"Should verify status code\", () => {",
							"    pm.response.to.have.status(200);",
							"    resBody = pm.response.json();",
							"})",
							"",
							"pm.test(\"Should verify name type\", () => {",
							"    resBody.map(obiekt => {",
							"        pm.expect(obiekt.name).to.be.a(\"string\");",
							"    })",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/me/boards?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new list on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody",
							"",
							"pm.test(\"Should verify status code\", () => {",
							"    pm.response.to.have.status(200);",
							"    resBody = pm.response.json();",
							"})",
							"",
							"pm.test(\"Should verify expected name\", () => {",
							"    pm.expect(resBody.name).to.eql(pm.collectionVariables.get(\"listName\"));",
							"})",
							"",
							"pm.collectionVariables.set(\"listId\", resBody.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/{{boardId}}/lists?name={{listName}}&key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						"{{boardId}}",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{listName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Show lists on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;",
							"",
							"pm.test(\"Should verify status code\", () => {",
							"    pm.response.to.have.status(200);",
							"    resBody = pm.response.json();",
							"})",
							"",
							"pm.test(\"Should verify closed type\", () => {",
							"    resBody.map(item => {",
							"        pm.expect(item.closed).to.be.a(\"boolean\");",
							"    })",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/{{boardId}}/lists?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						"{{boardId}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody",
							"",
							"pm.test(\"Should verify status code\", () => {",
							"    pm.response.to.have.status(200);",
							"    resBody = pm.response.json();",
							"})",
							"",
							"pm.test(\"Should verify value of ID list and ID board\", () => {",
							"    pm.expect(resBody.idList).to.eql(pm.collectionVariables.get(\"listId\"));",
							"    pm.expect(resBody.idBoard).to.eql(pm.collectionVariables.get(\"boardId\"));",
							"})",
							"",
							"pm.collectionVariables.set(\"cardId\", resBody.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cards?idList={{listId}}&key={{key}}&token={{token}}&name={{cardName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{listId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{cardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Show all cards on a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody",
							"",
							"pm.test(\"Should verify status code\", () => {",
							"    pm.response.to.have.status(200);",
							"    resBody = pm.response.json();",
							"})",
							"",
							"pm.test(\"Should verify value of ID board and ID list\", () => {",
							"    pm.expect(resBody.idBoard).to.eql(pm.collectionVariables.get(\"boardID\"));",
							"    pm.expect(resBody.idList).to.eql(pm.collectionVariables.get(\"listID\"));",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/{{boardId}}/cards?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						"{{boardId}}",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Card name update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resBody;",
							"",
							"pm.test(\"Should verify status code\", () => {",
							"    pm.response.to.have.status(200);",
							"    resBody = pm.response.json();",
							"})",
							"",
							"pm.test(\"Should verify value of updatename\", () => {",
							"    pm.expect(resBody.name).to.eql(pm.collectionVariables.get(\"updateCardName\"));",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cards/{{cardId}}?name={{updateCardName}}&key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						"{{cardId}}"
					],
					"query": [
						{
							"key": "name",
							"value": "{{updateCardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should verify status code\", () => {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cards/{{cardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						"{{cardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should verify status code\", () => {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/boards/{{boardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com/1",
			"type": "string"
		},
		{
			"key": "boardName",
			"value": "Nowa tablica z API",
			"type": "string"
		},
		{
			"key": "boardId",
			"value": ""
		},
		{
			"key": "listName",
			"value": "Dodana lista z API",
			"type": "string"
		},
		{
			"key": "listId",
			"value": ""
		},
		{
			"key": "cardName",
			"value": "Dodana karta z API",
			"type": "string"
		},
		{
			"key": "cardId",
			"value": ""
		},
		{
			"key": "updateCardName",
			"value": "Aktualizacja nazwy karty z API",
			"type": "string"
		}
	]
}